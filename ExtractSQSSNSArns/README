# SearchForSNSFromSQSArns (.NET)

This project helps you identify which AWS SNS topics are subscribed to your SQS queues, extract SQS ARNs by filter, and purge messages from those queues.  
It provides three main commands:

- **extract**: Extract SQS queue ARNs by a filter word.
- **collect**: Collect SNS subscriptions for those queues.
- **purge**: Delete all messages from the queues in `filtered_arns.txt`.

## Prerequisites

- [.NET 6.0+ SDK](https://dotnet.microsoft.com/download)
- [AWSSDK.SimpleNotificationService](https://www.nuget.org/packages/AWSSDK.SimpleNotificationService)
- [AWSSDK.SQS](https://www.nuget.org/packages/AWSSDK.SQS)
- AWS credentials with permissions to call `sqs:ListQueues`, `sqs:GetQueueAttributes`, `sns:ListSubscriptions`, and `sqs:PurgeQueue`

## Setup

1. **Clone the repository**  
   ```sh
   git clone <repo-url>
   cd SearchForSNSFromSQSArns
   ```

2. **Install dependencies**  
   ```sh
   dotnet add package AWSSDK.SimpleNotificationService
   dotnet add package AWSSDK.SQS
   ```

3. **Configure AWS credentials**  
   - Set environment variables:
     ```sh
     export AWS_ACCESS_KEY_ID=your_access_key
     export AWS_SECRET_ACCESS_KEY=your_secret_key
     export AWS_DEFAULT_REGION=your_region
     ```
   - Or use `aws configure` to set up credentials in `~/.aws/credentials`.

## Usage

### 1. Extract SQS ARNs by Filter

Find all SQS queues in the given region whose **queue name** contains the filter word (case-insensitive), and write their ARNs to `filtered_arns.txt`:

```sh
dotnet run extract <filter_word> <region>
```
Example:
```sh
dotnet run extract rewards eu-central-1
```

### 2. Collect SNS Subscriptions

Read `filtered_arns.txt` and find all SNS subscriptions (in the given region) where the endpoint matches one of the ARNs. The results are written to `subscriptions.txt`:

```sh
dotnet run collect <region>
```
Example:
```sh
dotnet run collect eu-central-1
```

### 3. Purge SQS Queues

Delete all messages from the SQS queues listed in `filtered_arns.txt`:

```sh
dotnet run purge <region>
```
Example:
```sh
dotnet run purge eu-central-1
```
**Warning:** Purging a queue deletes all messages in it. Use with caution.

## Output

- `filtered_arns.txt`: SQS queue ARNs matching your filter word
- `subscriptions.txt`: SNS subscription ARNs for your SQS queues